@using Kendo.Mvc.UI
@using WebDevelopment.Helper
@model List<BusinessLayer.Views.DirectiveView>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AircraftLayout.cshtml";
}

    <div class="card">
        <div class="card-header">
            <h5>AD Status All</h5>
        </div>
        <div class="card-block">
            
            @(Html.Kendo().Grid(Model)
                  .Name("Grid")
                  .Columns(columns =>
                  {
                      columns.Bound(p => p).ClientTemplate(KendoHelper.PdfButton(Url.Action("OpenPdf", "File"), new Dictionary<string, string>
                      {
                          { "ADFileID", "AD File" },
                          {"ServiceBulletinFileID", "Service Bulletin" },
                          {"EngineeringOrderFileID", "Engineering Order" }
                      })).Title(" ").Width(140).Sortable(false).Groupable(false).Filterable(false);
                      columns.Bound(p => p.AdNo).Title("AD No").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.SbNo).Title("SB No").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.EoNo).Title("EO No").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.Applicability).Title("Applicabilty").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.Description).Title("Description").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.Remarks).Title("Remarks").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.Zone).Title("Zone").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.Workarea).Title("Work Area").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.Access).Title("Access").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.WorkType.FullName).Title("Work Type").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.StcNo).Title("STC No").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.AtaString).Title("ATA Chapter").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.NDTType.ShortName).Title("NDT").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.ManHours).Title("M.H.").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.Cost).Title("Cost").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                      columns.Bound(p => p.HiddenRemarks).Title("Hidden remarks").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  })
                  .ToolBar(tools => tools.Excel())
                  .Excel(excel => excel
                      .FileName("AD Status All.xlsx")
                      .Filterable(true)
                      .AllPages(true)
                      .ProxyURL(Url.Action("ExcelExport", "Excel"))
                  )
                  .Scrollable(scrollable => scrollable.Height(550))
                  .Reorderable(reorderable => reorderable.Columns(true))
                  .Resizable(resizable => resizable.Columns(true))
                  .Pageable()
                  .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                  .Sortable()
                  .Groupable()
                  .ColumnMenu()
                  .DataSource(dataSource => dataSource
                      .Ajax()
                      .PageSize(250)
                      .ServerOperation(false)
                      .Read(read => read.Action("", ""))
                  ))

        </div>
    </div>