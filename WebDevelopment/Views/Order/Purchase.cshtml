@using BusinessLayer.Views
@using Kendo.Mvc.UI

@{
    ViewData["Title"] = "Purchase";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var purchase = (List<PurchaseOrderView>)ViewData["PurchaseOrders"];
}

<div class="card">
    <div class="card-header">
        <h5>Purchase Orders</h5>
    </div>
    <div class="card-block">
        @(Html.Kendo().Grid(purchase)
              .Name("Grid")
              .Columns(columns =>
              {
                  columns.Bound(p => p.Number).Title("Order No").Width(130);
                  columns.Bound(p => p.Title).Title("Title").Width(130);
                  columns.Bound(p => p.Description).Title("Description").Width(130);
                  columns.Bound(p => p.OpeningDate).Title("Opening Date").Width(130).ClientTemplate("#= kendo.toString(OpeningDate, \"dd.MM.yyyy\") #");
                  columns.Bound(p => p.PublishingDate).Title("Publishing Date").Width(130).ClientTemplate("#= kendo.toString(PublishingDate, \"dd.MM.yyyy\") #");
                  columns.Bound(p => p.ClosingDate).Title("Closing Date").Width(130).ClientTemplate("#= kendo.toString(ClosingDate, \"dd.MM.yyyy\") #");
                  columns.Bound(p => p.Author).Title("Author").Width(130);
                  columns.Bound(p => p.PublishedByUser).Title("Published By").Width(130);
                  columns.Bound(p => p.CloseByUser).Title("Closed By").Width(130);
                  columns.Bound(p => p.Remarks).Title("Remark").Width(130);
              })
              .ToolBar(tools => tools.Excel())
              .Excel(excel => excel
                  .FileName("Purchase Orders.xlsx")
                  .Filterable(true)
                  .AllPages(true)
                  .ProxyURL(Url.Action("ExcelExport", "Excel"))
              )
              .Scrollable(scrollable => scrollable.Height(630))
              .Reorderable(reorderable => reorderable.Columns(true))
              .Resizable(resizable => resizable.Columns(true))
              .Pageable()
              .Filterable()
              .Sortable()
              .Groupable()
              .ColumnMenu()
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .PageSize(250)
                  .ServerOperation(false)
                  .Read(read => read.Action("", ""))
              ))
    </div>
</div>
