@using BusinessLayer.Views
@using Kendo.Mvc.UI
@using WebDevelopment.Helper

@{
    ViewData["Title"] = "Store";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var components = (List<ComponentView>)ViewData["Components"];
    var store = (StoreView)ViewData["Store"];
}

<div class="card">
    <div class="card-header">
        <h5>@store.StoreName</h5>
    </div>
    <div class="card-block">
        @(Html.Kendo().Grid(components)
              .Name("Grid")
              .Columns(columns =>
              {
                  columns.Bound(p => p.Id).ClientTemplate(KendoHelper.PdfButton(Url.Action("OpenPdf", "File"), new Dictionary<string, string>
                  {
                      {"CRSFileId", "CRS" },
                      {"ShippingFileId", "Shipping" },
                  })).Title(" ").Width(120).Sortable(false).Groupable(false);
                  columns.Bound(p => p.ATAChapterString).Title("ATA").Width(200);
                  columns.Bound(p => p.ReferenceProduct).Title("Reference").Width(200);
                  columns.Bound(p => p.PartNumber).Title("Part. №").Width(200);
                  columns.Bound(p => p.AltPartNumberProduct).Title("Alt Part. №").Width(200);
                  columns.Bound(p => p.StandardProduct).Title("Standart").Width(200);
                  columns.Bound(p => p.ModelProduct).Title("Name").Width(200);
                  columns.Bound(p => p.Description).Title("Description").Width(200);
                  columns.Bound(p => p.SerialNumber).Title("Serial №").Width(200);
                  columns.Bound(p => p.BatchNumber).Title("Batch №").Width(200);
                  columns.Bound(p => p.IdNumber).Title("ID №").Width(200);
                  columns.Bound(p => p.GoodsClass.ShortName).Title("Class").Width(200);
                  columns.Bound(p => p.State.FullName).Title("State").Width(200);
                  columns.Bound(p => p.Status).Title("Status").Width(200);
                  columns.Bound(p => p.Location.FullName).Title("Location").Width(200);
                  columns.Bound(p => p.Location.LocationsType.FullName).Title("Facility").Width(200);
                  columns.Bound(p => p.Quantity).Title("Current").Width(200);
                  columns.Bound(p => p.ShouldBeOnStockString).Title("Should be").Width(200);
                  columns.Bound(p => p.QuantityInString).Title("Qty in").Width(200);
                  columns.Bound(p => p.FromSupplier.Name).Title("Supplier").Width(200);
                  columns.Bound(p => p.Remarks).Title("Remarks").Width(200);
              })
              .ToolBar(tools => tools.Excel())
              .Excel(excel => excel
                  .FileName($"{store.StoreName}.xlsx")
                  .Filterable(true)
                  .AllPages(true)
                  .ProxyURL(Url.Action("ExcelExport", "Excel"))
              )
              .Scrollable(scrollable => scrollable.Height(550))
              .Reorderable(reorderable => reorderable.Columns(true))
              .Resizable(resizable => resizable.Columns(true))
              .Pageable()
              .Filterable()
              .Sortable()
              .Groupable()
              .ColumnMenu()
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .PageSize(250)
                  .ServerOperation(false)
                  .Read(read => read.Action("", ""))
              ))
    </div>
</div>


