@using BusinessLayer.Views
@using Kendo.Mvc.UI

@{
    ViewData["Title"] = "ComponentModels";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var model = (List<ComponentModelView>)ViewData["ComponentModels"];
}

<div class="card">
    <div class="card-header">
        <h5>Component Models</h5>
    </div>
    <div class="card-block">
        @(Html.Kendo().Grid(model)
              .Name("Grid")
              .Columns(columns =>
              {
                  columns.Bound(p => p.Model).Title("Name").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.Reference).Title("Reference").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.SubModel).Title("Series").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.PartNumber).Title("Part Number").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.AltPartNumber).Title("Alt Part Number").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.Description).Title("Description").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.Manufacturer).Title("Manufacturer").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.Code).Title("Code").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.DescRus).Title("Description Rus").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.ComponentClassString).Title("Class").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.AtaChapterString).Title("ATA").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.CostNew).Title("Cost new").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.CostOverhaul).Title("Cost OH").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.CostServiceable).Title("Cost Serviceable").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.Remarks).Title("Remarks").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.IsEffectivity).Title("Effectivity").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
                  columns.Bound(p => p.IsDangerousString).Title("IsDangerous").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(200);
              })
              .ToolBar(tools => tools.Excel())
              .Excel(excel => excel
                  .FileName("ComponenModels.xlsx")
                  .Filterable(true)
                  .AllPages(true)
                  .ProxyURL(Url.Action("ExcelExport", "Excel"))
              )
              .Scrollable(scrollable => scrollable.Height(550))
              .Reorderable(reorderable => reorderable.Columns(true))
              .Resizable(resizable => resizable.Columns(true))
              .Pageable()
              .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
              .Sortable()
              .Groupable()
              .ColumnMenu()
              .DataSource(dataSource => dataSource        
                  .Ajax()
                  .PageSize(250)
                  .ServerOperation(false)
                  .Read(read => read.Action("", ""))
              ))
    </div>
</div>

